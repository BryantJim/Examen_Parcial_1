@page "/CNCFAutorizados"

@inject IToastService toast

<div class="card-img">
        <div class="card-header">
            <h1>Consulta de NCFAutorizados</h1>
        </div>

        <div class="card-body">
            <form>
                <div class="form-row">
                    <div class="form-group">
                        <label>Filtrar por Fecha</label>
                        <select class="form-control" @bind="FiltroFecha">
                            <option value="0" >Todo</option>
                            <option value="1">Fecha</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Desde</label>
                        <input type="date" @bind="Desde" class="form-control" />
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Hasta</label>
                        <input type="date" @bind="Hasta" class="form-control" />
                    </div>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    <div class="form-group">
                        <label>Filtro</label>
                        <select class="form-control" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Ncf Id</option>
                            <option value="2">TipoNcfId</option>
                            <option value="3">Secuencia</option>
                            <option value="4">Limite</option>
                            <option value="5">Reorden</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Criterio</label>
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>Ncf Id</th>
                                <th>TipoNcf Id</th>
                                <th>Secuencia</th>
                                <th>Limite</th>
                                <th>Reorden</th>
                                <th>Vence</th>
                              
                            </tr>
                        </thead>
                        <tbody class="bg-white">
                             @foreach (var item in ListaNCFAutorizados)
                            {
                                <tr>
                                   <td>@item.NcfId</td>
                                    <td>@item.TipoNcfId</td>
                                    <td>@item.Secuencia</td>
                                    <td>@item.Limite</td>
                                    <td>@item.Reorden</td>
                                    <td>@item.Vence.ToString("dd/MM/yyyy")</td>



                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
</div>        

@code
{
    public List<NCFAutorizados> ListaNCFAutorizados { get; set; }

    private DateTime Desde { get; set; } = DateTime.Now;
    private DateTime Hasta { get; set; } = DateTime.Now;

    public string Filtro { get; set; }
    private string FiltroFecha { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        ListaNCFAutorizados= new List<NCFAutorizados>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public void Consultar()
    {
        int id;
        int.TryParse(Criterio,out id);
        switch (Filtro)
        {
            case "0": //Todo
                ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true);
                break;
            case "1": 
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => c.NcfId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true).OrderBy(c => c.NcfId).ToList();
                }
                break;
            case "2":
                if (Criterio.Trim().Length > 0)
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => c.TipoNcfId == id);
                else
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true).OrderBy(c => c.TipoNcfId).ToList();
                break;
            case "3": 
                if (Criterio.Trim().Length > 0)
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => c.Secuencia == id);
                else
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true).OrderBy(c => c.Secuencia).ToList();
                break;
            case "4": //Telefono
                if (Criterio.Trim().Length > 0)
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => c.Limite == id);
                else
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true).OrderBy(c => c.Limite).ToList();
                break;
            case "5": //Direccion
                if (Criterio.Trim().Length > 0)
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => c.Reorden== id);
                else
                    ListaNCFAutorizados = NCFAutorizadosBLL.GetList(c => true).OrderBy(c => c.Reorden).ToList();
                break;
        }

        switch (FiltroFecha)
        {
            case "0": //Nada
                break;
            case "1": //Fecha
                ListaNCFAutorizados = ListaNCFAutorizados.Where(s => s.Vence >= Desde && s.Vence <= Hasta).ToList();
                break;

        }
    }
}